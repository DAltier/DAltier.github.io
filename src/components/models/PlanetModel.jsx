/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
'use client';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

const PlanetModel = React.memo(function PlanetModel(props) {
  // Use React.memo for performance optimization
  const { nodes, materials } = useGLTF('/models/planet-transformed.glb');

  const modelRef = useRef();

  useFrame(() => {
    modelRef.current.rotation.y += 0.007;
  });
  return (
    <group
      {...props}
      dispose={null}
      ref={modelRef}
      scale={[0.2, 0.2, 0.2]}
      rotation={[0.4, -1, 0]}
      position={[0, 0.9, 0]}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube_m_planet_0.geometry}
        material={materials.m_planet}
        rotation={[-1.944, -0.197, -0.076]}
        scale={5.881}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane_m_ring_0.geometry}
        material={materials.m_ring}
        rotation={[-1.944, -0.197, -0.076]}
        scale={10.394}
      />
    </group>
  );
});

export default PlanetModel;
useGLTF.preload('/models/planet-transformed.glb');
