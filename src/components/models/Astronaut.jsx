/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
'use client';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

const Astronaut = React.memo(function Astronaut(props) {
  const { nodes, materials } = useGLTF('/models/astronaut-transformed.glb');

  const modelRef = useRef();

  // move 3D model up and down the y axis (between 1 and -1)
  useFrame((state) => {
    modelRef.current.position.y =
      -0.1 + Math.sin(state.clock.elapsedTime) * 0.15;
  });

  return (
    <group
      {...props}
      dispose={null}
      ref={modelRef}
      position={[0, -1.5, 0]}
      scale={[1.5, 1.5, 1.5]}
      rotation={[0.1, 0, 0]}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_2.geometry}
        material={materials.head}
        position={[0, -1.5, 0]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_3.geometry}
        material={materials['material_flex.002']}
        position={[0, -1.5, 0]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_4.geometry}
        material={materials.cabello_m}
        position={[0, -1.5, 0]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
    </group>
  );
});

export default Astronaut;
useGLTF.preload('/astronaut-transformed.glb');
