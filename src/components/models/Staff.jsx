/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
'use client';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

const Staff = React.memo(function Staff(props) {
  // Use React.memo for performance optimization
  const { nodes, materials } = useGLTF('/models/space-transformed.glb');
  const modelRef = useRef();

  useFrame(() => {
    modelRef.current.rotation.y += 0.007;
  });

  return (
    <group
      {...props}
      dispose={null}
      scale={[0.3, 0.3, 0.3]}
      position={[0, 0.7, 0]}
      ref={modelRef}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Base001__0.geometry}
        material={materials['Scene_-_Root']}
        position={[2639.525, -16.207, -15.677]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
    </group>
  );
});

export default Staff;
useGLTF.preload('/models/space-transformed.glb');
